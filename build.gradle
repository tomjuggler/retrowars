buildscript {
    ext.kotlinVersion = '1.5.0'

    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

    }
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "Super Retro Mega Wars"

        // Generally just used for Android app versioning, but we also use it in our networking to
        // report back to users if they are using an unsupported version.
        //
        // The format here must remain consistent in order for the F-Droid checkupdates bot to pick
        // them up. Normally it just checks the android apps build.gradle or AndroidManifest, but
        // we dynamically inject them via these properties.
        appVersionCode = 1
        appVersionName = "0.1.0"

        gdxVersion = '1.9.12'
        kotlinCoroutinesVersion = '1.4.2'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url 'https://jitpack.io' }
    }

    // Newer versions of objenesis (used by kryonet to deserialize classes) requires minSdk 26.
    // Not particularly interested in bumping from 14 just to solve this issue.
    // https://github.com/mockk/mockk/issues/281#issuecomment-483329039
    configurations.all {
        resolutionStrategy.force 'org.objenesis:objenesis:2.6'
    }

}

project(":texture-packer") {
    apply plugin: "kotlin"

    dependencies {
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
}

project(":server") {
    apply plugin: "kotlin"

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        implementation "io.javalin:javalin:3.13.7"
        implementation "org.slf4j:slf4j-simple:1.7.30" // Required for Javalin
    }
}

project(":desktop") {
    apply plugin: "kotlin"

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
}

project(":android") {
    apply plugin: "android"
    apply plugin: "kotlin-android"

    configurations { natives }

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"
    }
}

project(":core") {
    apply plugin: "kotlin"

    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
        implementation 'com.gmail.blueboxware:libgdxpluginannotations:1.16'
        implementation 'com.github.crykn:kryonet:2.22.7'
        implementation 'com.google.code.gson:gson:2.8.6'
        implementation 'com.crashinvaders.vfx:gdx-vfx-core:0.5.0'
        implementation 'com.crashinvaders.vfx:gdx-vfx-effects:0.5.0'
    }

    // https://stackoverflow.com/a/54006518
    processResources {
        expand(['appVersionCode': appVersionCode])
    }
}
